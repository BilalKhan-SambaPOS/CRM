//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using BO;

namespace CRM_API.CRMServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CRMServiceReference.ICRM")]
    public interface ICRM {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRM/GetLookups", ReplyAction="http://tempuri.org/ICRM/GetLookupsResponse")]
        System.Data.DataSet GetLookups(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRM/GetLookups", ReplyAction="http://tempuri.org/ICRM/GetLookupsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLookupsAsync(string name);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/GetContacts", ReplyAction = "http://tempuri.org/ICRM/GetContactsResponse")]
        System.Data.DataSet GetContacts();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/GetContacts", ReplyAction = "http://tempuri.org/ICRM/GetContactsResponse")]

        System.Threading.Tasks.Task<System.Data.DataSet> GetContactsAsync();
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/GetContactById", ReplyAction = "http://tempuri.org/ICRM/GetContactByIdResponse")]
        System.Data.DataSet GetContactById(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/GetContactById", ReplyAction = "http://tempuri.org/ICRM/GetContactByIdResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetContactByIdAsync(int id);
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/AddContact", ReplyAction = "http://tempuri.org/ICRM/AddContactResponse")]
        string AddContact(Contact contact);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/AddContact", ReplyAction = "http://tempuri.org/ICRM/AddContactResponse")]
        System.Threading.Tasks.Task<string> AddContactAsync(Contact contact);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/GetTasks", ReplyAction = "http://tempuri.org/ICRM/GetTasksResponse")]
        System.Data.DataSet GetTasks();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/GetTasks", ReplyAction = "http://tempuri.org/ICRM/GetTasksResponse")]

        System.Threading.Tasks.Task<System.Data.DataSet> GetTasksAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/AddTask", ReplyAction = "http://tempuri.org/ICRM/AddTaskResponse")]
        string AddTask(Task task);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/AddTask", ReplyAction = "http://tempuri.org/ICRM/AddTaskResponse")]
        System.Threading.Tasks.Task<string> AddTaskAsync(Task task);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/callspWithoutParams", ReplyAction = "http://tempuri.org/ICRM/callspWithoutParamsResponse")]
        System.Data.DataSet callspWithoutParams(string spName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/callspWithoutParams", ReplyAction = "http://tempuri.org/ICRM/callspWithoutParamsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> callspWithoutParamsAsync(string spName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/getContactEdit", ReplyAction = "http://tempuri.org/ICRM/getContactEditResponse")]
        System.Data.DataSet getContactEdit(int contactId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRM/getContactEdit", ReplyAction = "http://tempuri.org/ICRM/getContactEditResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> getContactEditAsync(int contactId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICRMChannel : CRM_API.CRMServiceReference.ICRM, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CRMClient : System.ServiceModel.ClientBase<CRM_API.CRMServiceReference.ICRM>, CRM_API.CRMServiceReference.ICRM {
        
        public CRMClient() {
        }
        
        public CRMClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CRMClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CRMClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CRMClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetLookups(string name) {
            return base.Channel.GetLookups(name);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLookupsAsync(string name) {
            return base.Channel.GetLookupsAsync(name);
        }
        public System.Data.DataSet GetContacts()
        {
            return base.Channel.GetContacts();
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetContactsAsync()
        {
            return base.Channel.GetContactsAsync();
        }
        public System.Data.DataSet GetContactById(int id)
        {
            return base.Channel.GetContactById(id);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetContactByIdAsync(int id)
        {
            return base.Channel.GetContactByIdAsync(id);
        }
        public string AddContact(Contact contact)
        {
            return base.Channel.AddContact(contact);
        }

        public System.Threading.Tasks.Task<string> AddContactAsync(Contact contact)
        {
            return base.Channel.AddContactAsync(contact);
        }

        public System.Data.DataSet GetTasks()
        {
            return base.Channel.GetTasks();
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetTasksAsync()
        {
            return base.Channel.GetTasksAsync();
        }

        public string AddTask(Task task)
        {
            return base.Channel.AddTask(task);
        }

        public System.Threading.Tasks.Task<string> AddTaskAsync(Task task)
        {
            return base.Channel.AddTaskAsync(task);
        }

        public System.Data.DataSet callspWithoutParams(string spName)
        {
            return base.Channel.callspWithoutParams(spName);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> callspWithoutParamsAsync(string spName)
        {
            return base.Channel.callspWithoutParamsAsync(spName);
        }

        public System.Data.DataSet getContactEdit(int contactId)
        {
            return base.Channel.getContactEdit(contactId);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> getContactEditAsync(int contactId)
        {
            return base.Channel.getContactEditAsync(contactId);
        }
    }
}
